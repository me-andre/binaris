const {expect} = require('chai');

const {
  fallStep,
} = require('../fall-step');

const {prettyPrintScene} = require('../util');

describe('a free figure', () => {
  it('is able to fall into a stuck figure', () => {
    const before = {
      "scene": [
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 1, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 0, 0, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
      ],
      "groups": {
        "0": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          86,
          87,
          88,
          89,
          90,
          91,
          92,
          93,
          96,
          97,
          98,
          99,
          100,
          101,
          102,
          103,
          106,
          107,
          108,
          109,
          110,
          111,
          112,
          113,
          116,
          117,
          118,
          119,
          120,
          121,
          122,
          123,
          126,
          127,
          128,
          129,
          130,
          131,
          132,
          133,
          136,
          137,
          138,
          139,
          14,
          35,
          24,
          45,
          34,
          55,
          44,
          65,
          54,
          75,
          64,
          85,
          74,
          95,
          84,
          105,
          94,
          115,
          104,
          125
        ],
        "1": [
          140,
          141,
          142,
          143,
          145,
          146,
          147,
          148,
          149,
          150,
          151,
          152,
          153,
          155,
          156,
          157,
          158,
          159,
          160,
          161,
          162,
          163,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          176,
          177,
          178,
          179,
          180,
          181,
          182,
          183,
          187,
          188,
          189,
          190,
          191,
          192,
          193,
          197,
          198,
          199,
          200,
          201,
          202,
          203,
          207,
          208,
          209,
          210,
          211,
          212,
          213,
          216,
          217,
          218,
          219,
          220,
          221,
          222,
          223,
          226,
          227,
          228,
          229,
          230,
          231,
          232,
          233,
          236,
          237,
          238,
          239,
          240,
          241,
          242,
          243,
          246,
          247,
          248,
          249,
          250,
          251,
          252,
          253,
          254,
          256,
          257,
          258,
          259,
          260,
          261,
          262,
          263,
          264,
          266,
          267,
          268,
          269,
          270,
          271,
          272,
          273,
          274,
          275,
          276,
          277,
          278,
          279,
          244,
          265,
          234,
          255,
          224,
          245,
          214,
          235,
          225,
          215,
          196,
          186,
          206,
          204,
          205,
          194,
          195,
          184,
          185,
          174,
          175
        ],
        "figure0": [
          144,
          154,
          164,
          165
        ],
        "figure1": [
          114,
          124,
          134,
          135
        ]
      },
      "size": {
        "width": 10,
        "height": 28
      }
    };

    const after = fallStep(before);

    expect(after.conflicts).to.be.empty;

    expect(after.scene).to.eql([
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
      1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
      1, 1, 1, 1, 0, 0, 1, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    ]);
  });
});
